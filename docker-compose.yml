version: '3.8'

x-logging: &loki-logging
  driver: loki
  options:
    loki-url: "http://localhost:3100/api/prom/push"

services:
  backend-django:
    build: ./src/backend/teaser
    # command: bash -c " python manage.py runserver 0.0.0.0:8000"
    command: gunicorn --env DJANGO_SETTINGS_MODULE=teaser.settings teaser.wsgi:application --bind 0.0.0.0:8000
    ports:
      - 8069:8000
    volumes:
      - static_volume:/app/static
      - ./src/backend/teaser:/app
    env_file:
      - .backend.env
    depends_on:
      - db
    logging: *loki-logging
    networks:
      - teaser-network
  frontend:
    build: ./src/frontend/teaser
    command: npm run start
    ports:
      - 8081:8081
      - 42069:42069
    env_file:
      - .frontend.env
    volumes:
      - ./src/frontend/teaser:/app
      - /app/node_modules
    networks:
      - teaser-network
  db:
    image: postgres:15.2
    volumes:
      - ./data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=teaseruser
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=teaser
    networks:
      - teaser-network
  nginx:
    restart: unless-stopped
    image: nginx:1.21-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/static
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - backend-django
    networks:
      - teaser-network
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew ${PROSODY_INTEGRATION}; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    environment:
      - PROSODY_INTEGRATION=--deploy-hook "prosodyctl --root cert import /etc/letsencrypt/live"
  prosody:
    image: prosody/prosody
    build: ./prosody
    ports:
      - 5222:5222
      - 5269:5269
      - 5280:5280
    depends_on:
      - nginx
    volumes:
      - ./prosody/config:/etc/prosody
      - ./prosody/log:/var/log/prosody
      - ./certbot/conf:/etc/letsencrypt
      # - ./prosody/modules:/usr/lib/prosody/prosody-modules-enabled
    environment:
      - PROSODY_PASSWORD=${PROSODY_PASSWORD}
      - PROSODY_DOMAIN=${PROSODY_DOMAIN}
      - PROSODY_VIRTUAL_HOSTS=${PROSODY_VIRTUAL_HOSTS}
      - PROSODY_INTEGRATION=${PROSODY_INTEGRATION}
  prometheus:
    build: ./src/prometheus
    volumes:
      - ./src/prometheus:/prometheus
    ports:
      - 9090:9090
    networks:
      - teaser-network
  grafana:
    build: ./src/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${PROD_GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./src/grafana:/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    logging: *loki-logging
    user: '472'
    networks:
      - teaser-network
  loki:
    image: grafana/loki:2.6.1
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - teaser-network

volumes:
  static_volume:
networks:
  teaser-network:
