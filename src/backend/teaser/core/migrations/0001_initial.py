# Generated by Django 4.1.6 on 2023-03-04 11:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingPeriodModel',
            fields=[
                ('time_range', models.CharField(help_text='Weekly, Fortnightly, Monthly, Yearly, etc..', max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesModel',
            fields=[
                ('title', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EventMetricsTypeModel',
            fields=[
                ('type', models.CharField(help_text='Events created by a user: Clicks, watch, swipe right, etc..', max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='LocationsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=300)),
                ('country_code', models.CharField(max_length=3)),
                ('state', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethodsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_details', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='PostsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('is_private', models.BooleanField(default=False)),
                ('post_data', models.JSONField(help_text='data: {urls, thumbnails, ...}, question: {question_text, voiceover_url}')),
            ],
        ),
        migrations.CreateModel(
            name='PostTypesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileLinkTypesModel',
            fields=[
                ('type', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SongsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('song_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='TagsModel',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TeaserUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfc_username', models.CharField(max_length=32)),
                ('nfc_email_address', models.CharField(max_length=255)),
                ('phone_str', models.CharField(max_length=16)),
                ('profile_photo_url', models.URLField(blank=True, default='')),
                ('stage_name', models.CharField(blank=True, default='', max_length=64)),
                ('dob_date', models.DateField()),
                ('is_verified', models.BooleanField(default=False)),
                ('terms_of_service_accepted', models.BooleanField(default=False)),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.locationsmodel')),
                ('user_model', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.teaserusermodel')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserCategoriesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colour_code', models.CharField(help_text='#?????? colour code identifier specified by user', max_length=7)),
                ('categories_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.categoriesmodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_subscribed', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_period', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.billingperiodmodel')),
                ('creator_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_id', to='core.teaserusermodel')),
                ('subscriber_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber_id', to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='PurchasesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Donations, Purchases for services', max_length=300)),
                ('purchase_date', models.DateTimeField()),
                ('buyer_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='buyer_id', to='core.teaserusermodel')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.paymentmethodsmodel')),
                ('seller_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='seller_id', to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileLinksModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_url', models.URLField()),
                ('link_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.profilelinktypesmodel')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='PostTagsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.postsmodel')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tagsmodel')),
            ],
        ),
        migrations.AddField(
            model_name='postsmodel',
            name='post_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.posttypesmodel'),
        ),
        migrations.AddField(
            model_name='postsmodel',
            name='song_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.songsmodel'),
        ),
        migrations.AddField(
            model_name='postsmodel',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel'),
        ),
        migrations.AddField(
            model_name='paymentmethodsmodel',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel'),
        ),
        migrations.CreateModel(
            name='LikedPostsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.postsmodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='FollowedUsersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_id', to='core.teaserusermodel')),
                ('follower_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_id', to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='EventMetricsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_data', models.JSONField()),
                ('event_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.eventmetricstypemodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.CharField(max_length=500)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.postsmodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='CommentPathsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depth', models.PositiveIntegerField(default=0)),
                ('ancestor', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ancestor', to='core.commentsmodel')),
                ('descendent', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='descendent', to='core.commentsmodel')),
            ],
        ),
        migrations.CreateModel(
            name='BookmarkedPostsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.postsmodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.teaserusermodel')),
            ],
        ),
        migrations.CreateModel(
            name='BlockedUsersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocked_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_id', to='core.teaserusermodel')),
                ('blocker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker_id', to='core.teaserusermodel')),
            ],
        ),
    ]
