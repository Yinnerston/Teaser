global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    scrape_interval: 30s
    scrape_timeout: 10s
    static_configs:
      - targets: ['prometheus:9090']

  - job_name: 'backend-django'
    scrape_interval: 30s
    scrape_timeout: 10s
    static_configs:
      - targets: ['backend-django:8000']
  # COMMENT: I decided to use cadvisor/node-exporter instead of using the docker daemon metrics
  # COMMENT: because I used the `data\grafana\docker-prometheus-monitoring_rev7.json` template.
  # COMMENT: https://docs.docker.com/config/daemon/prometheus/#configure-docker
  # - job_name: 'docker'
  #        # metrics_path defaults to '/metrics'
  #        # scheme defaults to 'http'.
  #   scrape_interval: 30s
  #   scrape_timeout: 10s
  #   static_configs:
  #     - targets: ['host.docker.internal:9323']

  # - job_name: 'cadvisor'

  #   # Override the global default and scrape targets from this job every 5 seconds.
  #   scrape_interval: 5s

  #   static_configs:
  #   - targets: ['cadvisor:8080']

  # - job_name: 'node-exporter'

  #   # Override the global default and scrape targets from this job every 5 seconds.
  #   scrape_interval: 5s

  #   static_configs:
  #   - targets: ['node-exporter:9100']

  # - job_name: redis
  #   static_configs:
  #   - targets: ['redis-exporter:9121']
